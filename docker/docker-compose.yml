version: "3.3"
services:
  nodejs:
    build:
      context: .
      dockerfile: Dockerfile
    image: nodejs
    container_name: nodejs
    ports:
      - "5000:5000"
    links:
      - mongodb
    env_file: .env
    environment:
        - MONGO_USERNAME=$MONGO_USERNAME
        - MONGO_PASSWORD=$MONGO_PASSWORD
        - MONGO_HOSTNAME=db
        - MONGO_PORT=$MONGO_PORT
        - MONGO_DB=$MONGO_DB
    networks:
      - app-network
    volumes:
      - .:/home/nodejs/app
      - /home/nodejs/app/node_modules
  webserver:
    image: nginx:mainline-alpine
    container_name: webserver
    restart: unless-stopped
    ports:
      - "81:81"
    links:
      - nodejs:nodejs
    volumes:
      - ./nginx-conf:/etc/nginx/conf.d
    depends_on:
      - nodejs
    networks:
      - app-network
  mongodb:
    image : mongo
    container_name: mongodb
    env_file: .env
    environment:
        - MONGO_INITDB_ROOT_USERNAME=$MONGO_USERNAME
        - MONGO_INITDB_ROOT_PASSWORD=$MONGO_PASSWORD
    volumes:
      - /home/kiril/homework/kirill-nefodov/docker/mongodb/database:/data/db
    ports:
     - "6000:6000"
    restart: unless-stopped
    networks:
      - app-network
  mongo-express:
    image: mongo-express
    container_name: mongo-express
    environment:
      - MONGODB_SERVER=mongo
      - MONGODB_PORT=$MONGO_PORT
      - MONGODB_ENABLE_ADMIN=false
      - MONGODB_AUTH_DATABASE=admin
      - MONGODB_AUTH_USERNAME=${MONGO_ROOT_USER}
      - MONGODB_AUTH_PASSWORD=${MONGO_ROOT_PASSWORD}
      - BASICAUTH_USERNAME=${MONGOEXPRESS_LOGIN}
      - BASICAUTH_PASSWORD=${MONGOEXPRESS_PASSWORD}
    depends_on:
      - mongodb
    ports:
      - "6001:6001"
  mysql:
    image: mysql:latest
    container_name: mysql
    env_file: .env
    environment:
       - MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD
       - MYSQL_DATABAS=$MYSQL_DATABASE
       - MYSQL_USER=$MYSQL_USER
       - MYSQL_PASSWORD=$MYSQL_PASSWORD
    volumes:
      - /home/kiril/homework/kirill-nefodov/docker/mysql/database:/data/db
    ports:
      - "6002:6002"
    restart: unless-stopped
    networks:
      - app-network
  phpmyadmin:
    image: phpmyadmin
    container_name: phpmyadmin
    restart: always
    ports:
      - "6003:6003"
    environment:
      - PMA_ARBITRARY=1
volumes:
  dbdata:
  node_modules:

networks:
  app-network:
    driver: bridge